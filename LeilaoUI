public class LeilaoUI {
    private LeilaoControle controle;
    private Scanner scanner;

    public LeilaoUI() {
        controle = new LeilaoControle();
        scanner = new Scanner(System.in);
    }

    public void executar() {
        int opcao = 0;
        do {
            exibirMenu();
            opcao = lerOpcao();
            switch (opcao) {
                case 1:
                    adicionarLote();
                    break;
                case 2:
                    darLance();
                    break;
                case 3:
                    mostrarLotes();
                    break;
                case 4:
                    fecharLeilao();
                    break;
                case 5:
                    mostrarNaoVendidos();
                    break;
                case 6:
                    removerLote();
                    break;
                case 0:
                    System.out.println("Encerrando o programa...");
                    break;
                default:
                    System.out.println("Opção inválida! Tente novamente.");
            }
        } while (opcao != 0);
    }

    private void exibirMenu() {
        System.out.println("----- Sistema de Leilão Virtual -----");
        System.out.println("1. Adicionar lote");
        System.out.println("2. Dar lance");
        System.out.println("3. Mostrar lotes");
        System.out.println("4. Fechar leilão");
        System.out.println("5. Mostrar lotes não vendidos");
        System.out.println("6. Remover lote");
        System.out.println("0. Sair");
        System.out.println("--------------------------------------");
    }

    private int lerOpcao() {
        System.out.print("Digite a opção desejada: ");
        return scanner.nextInt();
    }

    private void adicionarLote() {
        scanner.nextLine();
        System.out.print("Digite a descrição do lote: ");
        String descricao = scanner.nextLine();
        controle.adicionarLote(descricao);
        System.out.println("Lote adicionado com sucesso!");
    }

    private void darLance() {
        mostrarLotes();
        System.out.print("Digite o número do lote: ");
        int numeroLote = scanner.nextInt();
        scanner.nextLine(); 
        System.out.print("Digite o nome do licitante: ");
        String nomeLicitante = scanner.nextLine();
        System.out.print("Digite o valor do lance: ");
        double valorLance = scanner.nextDouble();
        Pessoa licitante = new Pessoa(nomeLicitante);
        controle.darLance(numeroLote, licitante, valorLance);
        System.out.println("Lance dado com sucesso!");
    }

    private void mostrarLotes() {
        controle.mostrarLotes();
    }

    private void fecharLeilao() {
        controle.fecharLeilao();
        System.out.println("Leilão fechado!");
    }

    private void mostrarNaoVendidos() {
        ArrayList<Lote> naoVendidos = controle.getNaoVendidos();
        if (naoVendidos.isEmpty()) {
            System.out.println("Todos os lotes foram vendidos!");
        } else {
            System.out.println("Lotes não vendidos:");
            for (Lote lote : naoVendidos) {
                System.out.println("Lote: " + lote.getNumero() + " - Descrição: " + lote.getDescricao());
            }
        }
    }

    private void removerLote() {
        mostrarLotes();
        System.out.print("Digite o número do lote que deseja remover: ");
        int numeroLote = scanner.nextInt();
        Lote loteRemovido = controle.removerLote(numeroLote);
        if (loteRemovido != null) {
            System.out.println("Lote removido: " + loteRemovido.getDescricao());
        } else {
            System.out.println("Lote não encontrado!");
        }
    }

    public static void main(String[] args) {
        LeilaoUI ui = new LeilaoUI();
        ui.executar();
    }
}
